apiVersion: v1
kind: Service
metadata:
  name: {{ template "video.fullname" . }}-rabbitmq
  labels:
    app: {{ template "video.fullname" . }}-rabbitmq
    chart: {{ template "video.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  #type: NodePort
  clusterIP: None
  ports:
    - protocol: TCP
      port: 5672
      targetPort: http
      name: http
  selector:
    app: {{ template "video.fullname" . }}-rabbitmq
    release: {{ .Release.Name }}
---
{{- if .Values.useLocalStore }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ template "video.fullname" . }}-rabbitmq-storage
  labels:
    app: {{ template "video.fullname" . }}-rabbitmq
    chart: {{ template "video.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "video.fullname" . }}-rabbitmq-volume
  labels:
    app: {{ template "video.fullname" . }}-rabbitmq
    chart: {{ template "video.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  capacity:
    storage: 10Gi
  # volumeMode field requires BlockVolume Alpha feature gate to be enabled.
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: {{ template "video.fullname" . }}-rabbitmq-storage
  local:
    path: {{ .Values.rabbitmq.dbpath }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .Values.nodename }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "video.fullname" . }}-rabbitmq
  labels:
    app: {{ template "video.fullname" . }}-rabbitmq
    chart: {{ template "video.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "video.fullname" . }}-rabbitmq
  selector:
    matchLabels:
      app: {{ template "video.fullname" . }}-rabbitmq
      release: {{ .Release.Name }}
{{- if .Values.useLocalStore }}
  volumeClaimTemplates:
  - metadata:
      name: video-rabbitmq-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ template "video.fullname" . }}-rabbitmq-storage
      resources:
        requests:
          storage: 10Gi
{{- end }}
  template:
    metadata:
      labels:
        app: {{ template "video.fullname" . }}-rabbitmq
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: registry-gitlab
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}"
          imagePullPolicy: {{ .Values.rabbitmq.image.pullPolicy }}
          args:
            - 'rabbitmq-server'
            - '--hostname'
            - 'videoRabbit'
          ports:
            - containerPort: 5672
              name: http
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # env:
          #   - name: PATH_BASE
          #     value: /{{ template "video.fullname" . }}/video
          volumeMounts:
            - name: video-rabbitmq-volume
              mountPath: /var/lib/rabbitmq
            {{- if not .Values.useLocalStore }}
              subPath: rabbitmq
            {{- end }}
            # - name: video-config-volume
            #   mountPath: /app/Config
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if not .Values.useLocalStore }}
      volumes:
        - name: video-rabbitmq-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data-pvc
            readOnly: false
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
#     {{- with .Values.affinity }}
#       affinity:
# {{ toYaml . | indent 8 }}
#     {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}