apiVersion: v1
kind: Service
metadata:
  name: {{ template "video.fullname" . }}-nuve
  labels:
    app: {{ template "video.fullname" . }}-nuve
    chart: {{ template "video.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  #type: NodePort
  ports:
    - protocol: TCP
      port: 3000
      targetPort: http
      name: http
  selector:
    app: {{ template "video.fullname" . }}-nuve
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "video.fullname" . }}-nuve
  labels:
    app: {{ template "video.fullname" . }}-nuve
    chart: {{ template "video.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.nuve.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "video.fullname" . }}-nuve
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "video.fullname" . }}-nuve
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: registry-gitlab
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - '--nuve'
          ports:
            - containerPort: 3000
              name: http
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
            - name: RABBIT_HOST
              value: '{{ template "video.fullname" . }}-rabbitmq'
            - name: RABBIT_PORT
              value: '5672'
            - name: MONGDO_HOST
              value: '{{ template "video.fullname" . }}-mongodb'
          volumeMounts:
            - name: config-volume
              mountPath: /opt/licode/nuve/log4js_configuration.json
              subPath: log4js_configuration.json
          resources:
{{ toYaml .Values.resources | indent 12 }}
      # let video schedule on the same node with video database
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ template "video.fullname" . }}-rabbitmq
                      - {{ template "video.fullname" . }}-mongodb
              topologyKey: kubernetes.io/hostname
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
#     {{- with .Values.affinity }}
#       affinity:
# {{ toYaml . | indent 8 }}
#     {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}